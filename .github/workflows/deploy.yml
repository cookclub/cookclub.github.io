# Simple workflow for deploying static content to GitHub Pages
name: Deploy Static Content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci

      - name: 🐛 Debug Build Env
        run: |
          echo "VITE_SUPABASE_URL: $VITE_SUPABASE_URL"
          echo "VITE_SUPABASE_ANON_KEY starts with: ${VITE_SUPABASE_ANON_KEY:0:10}"
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

      - name: Build
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          
      - name: Inspect build output
        run: |
          echo "=== docs/ listing ==="
          ls -la docs
          echo "=== first 60 lines of docs/index.html ==="
          sed -n '1,60p' docs/index.html
          echo "=== check for styles.css link ==="
          grep -n 'href=["'\'']styles\.css["'\'']' docs/index.html || true

      - name: Ensure styles.css exists if referenced
        run: |
          if grep -q 'href=["'\'']styles\.css["'\'']' docs/index.html; then
            if [ ! -f docs/styles.css ]; then
              cat > docs/styles.css <<'CSS'
:root { --bg:#f7f7f8; --card:#fff; --text:#111; --muted:#666; }
html,body { height:100%; }
body { margin:0; background:var(--bg); color:var(--text);
  font:16px/1.5 system-ui,-apple-system,Segoe UI,Roboto,Inter,"Helvetica Neue",Arial; }
#library-view { max-width:1100px; margin:0 auto; padding:24px; }
CSS
            fi
          fi
      
      # (optional) keep a tiny step only for .nojekyll if you want it
      - name: Add .nojekyll
        run: touch docs/.nojekyll

      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the contents of the 'docs' folder
          path: './docs'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
